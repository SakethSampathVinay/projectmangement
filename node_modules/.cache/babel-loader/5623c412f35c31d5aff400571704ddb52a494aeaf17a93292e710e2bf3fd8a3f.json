{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sakesth Sampath\\\\OneDrive\\\\Desktop\\\\ProjectManagement\\\\frontend\\\\client\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/projects').then(response => {\n      setProjects(response.data);\n    });\n  }, []);\n  const categorizedProjects = {\n    accepted: [],\n    'in-progress': [],\n    pending: [],\n    done: []\n  };\n  projects.forEach(project => {\n    if (project.status === 'accepted') categorizedProjects.accepted.push(project);\n    if (project.status === 'in-progress') categorizedProjects['in-progress'].push(project);\n    if (project.status === 'pending') categorizedProjects.pending.push(project);\n    if (project.status === 'done') categorizedProjects.done.push(project);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Accepted Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categorizedProjects.accepted.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: project.name\n      }, project._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categorizedProjects['in-progress'].map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: project.name\n      }, project._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categorizedProjects.pending.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: project.name\n      }, project._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categorizedProjects.done.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: project.name\n      }, project._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Home","_s","projects","setProjects","get","then","response","data","categorizedProjects","accepted","pending","done","forEach","project","status","push","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","_id","_c","$RefreshReg$"],"sources":["C:/Users/Sakesth Sampath/OneDrive/Desktop/ProjectManagement/frontend/client/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Home = () => {\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/api/projects')\r\n            .then(response => {\r\n                setProjects(response.data);\r\n            });\r\n    }, []);\r\n\r\n    const categorizedProjects = {\r\n        accepted: [],\r\n        'in-progress': [],\r\n        pending: [],\r\n        done: []\r\n    };\r\n\r\n    projects.forEach(project => {\r\n        if (project.status === 'accepted') categorizedProjects.accepted.push(project);\r\n        if (project.status === 'in-progress') categorizedProjects['in-progress'].push(project);\r\n        if (project.status === 'pending') categorizedProjects.pending.push(project);\r\n        if (project.status === 'done') categorizedProjects.done.push(project);\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <h1>All Projects</h1>\r\n            <h2>Accepted Projects</h2>\r\n            <ul>\r\n                {categorizedProjects.accepted.map(project => (\r\n                    <li key={project._id}>{project.name}</li>\r\n                ))}\r\n            </ul>\r\n            {/* <h2>In Progress Projects</h2> */}\r\n            <ul>\r\n                {categorizedProjects['in-progress'].map(project => (\r\n                    <li key={project._id}>{project.name}</li>\r\n                ))}\r\n            </ul>\r\n            {/* <h2>Pending Projects</h2> */}\r\n            <ul>\r\n                {categorizedProjects.pending.map(project => (\r\n                    <li key={project._id}>{project.name}</li>\r\n                ))}\r\n            </ul>\r\n            {/* <h2>Completed Projects</h2> */}\r\n            <ul>\r\n                {categorizedProjects.done.map(project => (\r\n                    <li key={project._id}>{project.name}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZE,KAAK,CAACO,GAAG,CAAC,oCAAoC,CAAC,CAC1CC,IAAI,CAACC,QAAQ,IAAI;MACdH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,mBAAmB,GAAG;IACxBC,QAAQ,EAAE,EAAE;IACZ,aAAa,EAAE,EAAE;IACjBC,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE;EACV,CAAC;EAEDT,QAAQ,CAACU,OAAO,CAACC,OAAO,IAAI;IACxB,IAAIA,OAAO,CAACC,MAAM,KAAK,UAAU,EAAEN,mBAAmB,CAACC,QAAQ,CAACM,IAAI,CAACF,OAAO,CAAC;IAC7E,IAAIA,OAAO,CAACC,MAAM,KAAK,aAAa,EAAEN,mBAAmB,CAAC,aAAa,CAAC,CAACO,IAAI,CAACF,OAAO,CAAC;IACtF,IAAIA,OAAO,CAACC,MAAM,KAAK,SAAS,EAAEN,mBAAmB,CAACE,OAAO,CAACK,IAAI,CAACF,OAAO,CAAC;IAC3E,IAAIA,OAAO,CAACC,MAAM,KAAK,MAAM,EAAEN,mBAAmB,CAACG,IAAI,CAACI,IAAI,CAACF,OAAO,CAAC;EACzE,CAAC,CAAC;EAEF,oBACId,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBrB,OAAA;MAAAiB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BrB,OAAA;MAAAiB,QAAA,EACKR,mBAAmB,CAACC,QAAQ,CAACY,GAAG,CAACR,OAAO,iBACrCd,OAAA;QAAAiB,QAAA,EAAuBH,OAAO,CAACS;MAAI,GAA1BT,OAAO,CAACU,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAELrB,OAAA;MAAAiB,QAAA,EACKR,mBAAmB,CAAC,aAAa,CAAC,CAACa,GAAG,CAACR,OAAO,iBAC3Cd,OAAA;QAAAiB,QAAA,EAAuBH,OAAO,CAACS;MAAI,GAA1BT,OAAO,CAACU,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAELrB,OAAA;MAAAiB,QAAA,EACKR,mBAAmB,CAACE,OAAO,CAACW,GAAG,CAACR,OAAO,iBACpCd,OAAA;QAAAiB,QAAA,EAAuBH,OAAO,CAACS;MAAI,GAA1BT,OAAO,CAACU,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAELrB,OAAA;MAAAiB,QAAA,EACKR,mBAAmB,CAACG,IAAI,CAACU,GAAG,CAACR,OAAO,iBACjCd,OAAA;QAAAiB,QAAA,EAAuBH,OAAO,CAACS;MAAI,GAA1BT,OAAO,CAACU,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACnB,EAAA,CArDID,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAuDV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}